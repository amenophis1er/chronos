name: Build and Release PHAR

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer

      - name: Install dependencies
        run: composer install --no-dev

      - name: Create VERSION file
        run: echo "${GITHUB_REF##*/}" > VERSION  # Extracts the version from the tag

      - name: Build PHAR
        run: |
          php -d phar.readonly=0 build/build-phar.php

      - name: Include VERSION in PHAR
        run: |
          php -d phar.readonly=0 -r '
          $phar = new Phar("dist/chronos.phar");
          $phar->addFile("VERSION", "VERSION");'

      - name: Generate checksum
        run: |
          cd dist
          sha256sum chronos.phar > SHA256SUMS

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: dist

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-assets
          path: ./

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install gh

      - name: Configure GH_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" > gh_token.txt

      - name: Authenticate GH CLI
        run: gh auth login --with-token < gh_token.txt

      - name: Check if Release Exists
        id: check_release
        run: |
          if gh release view ${{ github.ref_name }} > /dev/null 2>&1; then
            echo "release_exists=true" >> $GITHUB_ENV
          else
            echo "release_exists=false" >> $GITHUB_ENV
          fi

      - name: Create Release
        if: env.release_exists == 'false'
        run: |
          gh release create ${{ github.ref_name }} --title "Release ${{ github.ref_name }}" --notes "Release notes for ${{ github.ref_name }}"

      - name: Upload PHAR to Release
        if: env.release_exists == 'false'
        run: |
          gh release upload ${{ github.ref_name }} chronos.phar --clobber

      - name: Upload Checksum to Release
        if: env.release_exists == 'false'
        run: |
          gh release upload ${{ github.ref_name }} SHA256SUMS --clobber
